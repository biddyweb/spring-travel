<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:management="http://www.xebia.fr/schema/xebia-management-extras"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.xebia.fr/schema/xebia-management-extras http://www.xebia.fr/schema/management/xebia-management-extras.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

   <!-- Scans for application @Components to deploy -->
   <context:component-scan base-package="org.springframework.webflow.samples" />

   <!-- Imports the configurations of the different infrastructure systems of the application -->
   <import resource="mvc.xml" />
   <import resource="webflow.xml" />
   <import resource="db.xml" />
   <import resource="security.xml" />
   <import resource="antifraud.xml" />

   <!-- Load properties required for initialization Spring beans. See @Value fields in PaymentConfiguration. -->
   <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="location" value="classpath:application.properties" />
      <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
   </bean>

   <!-- @Configuration classes contributing Spring beans. -->
   <bean class="org.springframework.webflow.samples.booking.PaymentConfiguration" />

   <!--  <management:servlet-context-aware-mbean-server id="mbeanServer" /> 
   <management:profile-aspect server="mbeanServer" jmxDomain="travel-ecommerce" />
   <management:application-version-mbean jmxDomain="travel-ecommerce" />-->
   <context:mbean-server id="mbeanServer"/>
   <context:mbean-export server="mbeanServer" />

    <!-- AOP configuration -->
	<aop:config>
		<aop:pointcut id="firstPointcut"  expression="execution(* fr.xebia..* (..))"/>
        <aop:pointcut id="secondPointcut"  expression="execution(* org.springframework.webflow.samples..*BookingService.* (..))"/>
		<aop:aspect id="loggingAspect" ref="monLogger">
		    <aop:before method="logMethodEntry"  pointcut-ref="firstPointcut"/>
		    <aop:after-returning method="logMethodExit" returning="result" pointcut-ref="firstPointcut"/>
	    </aop:aspect>
		<aop:aspect ref="monLogger">
		    <aop:before method="logMethodEntry"  pointcut-ref="secondPointcut"/>
		    <aop:after-returning method="logMethodExit" returning="result" pointcut-ref="secondPointcut"/>
	    </aop:aspect>
	</aop:config>

  	<bean id="monLogger" class="org.springframework.webflow.samples.util.TimeLogger"/>
  	
  	<!--  PLO AOP auto discovery -->
  	<aop:aspectj-autoproxy/>
  	
  	<bean id="jpaLogger" class="org.springframework.webflow.samples.util.JpaLogger"/>
  	
  	<bean id="databaseCacheAspect" class="org.springframework.webflow.samples.util.DatabaseCacheAspect">
  		<property name="hotelCache" ref="hotelCache"/>
  	</bean>
  	
  	<bean id="hotelCache" class="org.springframework.webflow.samples.util.HotelCache"/>
  	
  	<bean id="bugController" class="org.springframework.webflow.samples.util.BugController"/>
  	
  	<bean id="cacheFilter" class="org.springframework.webflow.samples.util.CacheFilter"/>
  
  	
</beans>